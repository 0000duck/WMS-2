<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="sb_TrayQuery.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABYAAAAWCAYAAADEtGw7AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAABEdJREFUSEvVlGtMm1UYx5k677eJMTMziHOYxUtiMjUugUkHlKGZy4C5yRzIcNNB
        47iUgUBk9Pa2nR0fFhyNQLmIG9DCwEXmuDhQWFAuBXqhtJTSltGWXqBQyFD2+BzyYvxQpn70n/zS93LO
        75ye95wn4P8fANgkEHHep4Tci5SIqxcIeS68HqaEvGbynG7230JR1BYUfN/YLAeLdQp8Sz5YvbMKPt8i
        WKfNUFdfCwIRr4uiOK/RXf45KA0WifmTWp0abq+sQEPHqCf1fLuTkV6/wipud8o7Rz3k+bh+DIRiwSxP
        wttGd717BCLuFdLJNutejTmjmGdLeyZa+60TfTqn4XKXUXtc0qnbl904Z3N6VrVjajLznwsLC++ju/sP
        X8QPu1RXC0vLyxDNVszJ2vQai3PJbvcsu62uJbv+ltcyZPToC6oH+mLONM6TmSua6lHOPUYr/AfXtZ4s
        QYm815F8rkOnm/aaLU6f3eZZdqF4xmBbmBwxeXTFzWM/MnNbVNWtg26DcZyIa2iF/+BXH9AbdXAwv8lW
        0qJRqszzRv2M12SaXZwwORbHcMbD/QZnb07NsDRR0n0tgXPVMT1jAT7FtdAK/8Ft5dAZNPDmp7Ur5W2G
        m78ZXGqVeU45PrPw6/it+V+01vmOr6/pRZmyQW5qaV/ZW5999/uUxQhfFhW4aIX/4FKYJ0x6OJDXNPOF
        rL+3W+24OTDh6hw1eX7A36rSVn1aRvlQcoZsMCtBfKMyJrvBPqpWQm5etpJW+I9AyJWpNCNwoaHXwcxp
        UeXXDl/8qkUnLLqkYqVXKPdnVA4xsiqUsZnlg6ci2E1dopob9v7BPshkf95CK/wHP8JheWMdLPgW7zCz
        FHNHxT8pMmVD+TjDFCLOkg2FE3Ec77okMr3e63S7oaT0ArBYJw/TCv+RSqWbcV/2aMZUYHO6/4jOVngi
        2Fe6j1AdkhMlPanxvOv572TIr+5jyxfwPZAddPLUJ7fDGGFMWrFxxOLCrcJzgmnduHbt5OFJc6UVtzvI
        yUs73+ZooE/eiEoJGVmnITklCfYfeNcXFxcXTis2DqkBuCx9l/GwkNpAasR6rZgym6CqWgYpJ44vJyV9
        BJSQj/cVcCwxYTH+yMG9tOLu4Qs5sVjV2nAbanEg91lOwWRObnbZ6UzWoZ2vvh71xtu7fVx+EZSVS6Gq
        RgaJHx8l8ii6+7/OPci9CKkLa7y8a1doKIPh5fLPwjcor/62cl2+4cyJ4H7kIeQR5HHkSeQp5Om/s2Pn
        K8zQ8PAFDi0nfPBh/CS+I4NvQtZCLjYjRPgYQmREsBUh5fF5ZDuyAwlBXkSCg0JC3gsNZ3gLCvOAEvEg
        /lCsJzAwkPR/APkrZKQHkUeRJ5BA5BnkWeQ5hMhfoAlGgpBtQdtf2rt7z57+CGaULTI6klS7hxG/5ZTM
        niwJ+QdkZNJwfbAtNOSaPCPvSBvSlvShlyAg4E/cPG4LCaZnnQAAAABJRU5ErkJggg==
</value>
  </data>
</root>