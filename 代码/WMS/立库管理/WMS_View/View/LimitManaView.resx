<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAAjlJREFUOE+1k81vEmEQxjcejDVq0oMxJD14MMELF0j4CMgC9UpCov4XHoq9ES8c
        et9Am9Cq7YGkFcpCm9ZYq1FBbYFdlmVZoR8q2jR+xEsPtpYU3nFmDz0ITb24ybPZd+aZ387Ovi/H4cXz
        /Dm73X7p2j+KvE6nc4BqOZvNdt7j8Qg+/82C7dboa/PtaP76CaIceTyeGwWXyxWjWs5isQyGQiEpfG8U
        7o7NQHhiFcLjK/2FOfLwPj9gBxK+eJCjm9frLQWDQSiVK+zwsAP7++0e/cLYb8yRJxAIAHZQOgbQwo9B
        SVZYu92Bg4N2X1FOkpT+AKJS8jRA+T8ChkGuqKzTAaAu/hbN5ugIDE8gMNw7A97ng/S82FXVOlOUGqso
        6rEUfCapqsZS6UyXvD1D9Hp5EIRYN5PJsXRaZLnsMsuKSyy3sMTE7CLLZBaNWDQ61nW73b0AH1JTqXlW
        rWogyyrstL7D50/foNHYhrJUhVJJAU3bhERi+mTA3Fya2kezDM1mC3583YOtjS9QLMpGrFZrwOTko9MB
        a2tlePGyCJtbu7C78xN/L3UgQ11vwtRUHwBtS/qE2dkUq1RUePN2HWaSWXiy8g7eN1oIUA2AphHgIaMZ
        YE2BDhWdxAs40cd4QLYjkfuv4vHxZUGIP4snkup0ckFffb6uy7KubzQ/6M3GRz0Wm6ijv4q6Y5xGunBP
        X3Y4HFfNZvNFXJ4dGnIOCMKDK4lE0kQSxaemfD5vaGQkYrJarSb0naHaP7aQUV+mNbC+AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="sBtn_Refresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAAl1JREFUOE+Vk9tPkmEcx9n8O8gZRi2tLWU5TDOWYiigjkObzFdeEIYDleUilcTD
        K6i8ISigmARpLpvmxuYWZWUpDKcdSNbWtXfOzdvm3TekGzms0XP7/J7P7/B5fgxGHuf+C3GfbFVWkEdo
        7hCxj58QTPP8/wQ82FYy9Zvtxo6N1jCxLj9ufdkMSaARotk66F4poVpSoHKw3JUTon+v4ureESEq0o+Z
        /Un4f3gQOPBiPu6C58sTOPfGMR4dhtQrRqmBPZYG6XyrZGrfKEJTe1Ys/1yA77sTT+Mz8H51wLU/ATpG
        wRq1YGi7H0JHPYo1RfY0QMeGwmj59BCLCR/8cQ8cuzZoVgjcsXFRaeGg3HQdTS4BGug6FKsK3VkttK1J
        wpOR4VRGe5TCXbr6sHr0puN8IFvDSrCUF4I5+5c+Fx41zfNP703zfvPGb51UDXOozMCidqaZIWMUEKtS
        Ur4kJlsWBKTQzSNr6SqSIfTWknxHDVlj45JcC4e8YSolz5z37KjNmSDZoogS++pP/iarPK0a4hzlrKr7
        szrYuUkkzl9KnjU4RN66w6mYLWllAqaNnuR8roWzAF1bpNu6a8bIziMQa1IkfyGSJUP/Wg06QqWUTsZG
        IZ9rRkkX25gG0H9Q2qloP1Z+BVJKg4m5NKWjOwMpperlNlzVXwqxlCxmhtLWsccfexE8mE0pnf3mxPS+
        HfSuFSNbAzCsa9Ay04gruuIQS1XIzdm/fEnk6g5poVslUUtX4zZVgQpzGcp6S45LDZfDbO1FY1bmTNLZ
        4iSVpg3xvzbxTCN3sLwvn0d/AEsvM10qwwzHAAAAAElFTkSuQmCC
</value>
  </data>
</root>